events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# TCP/UDP proxy configuration for Redis
stream {
    # Logging for TCP connections
    log_format stream_format '$remote_addr [$time_local] '
                             '$protocol $status $bytes_sent $bytes_received '
                             '$session_time "$upstream_addr" '
                             '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log /var/log/nginx/redis_access.log stream_format;
    error_log /var/log/nginx/redis_error.log warn;

    # Redis upstream configuration (Round Robin for load balancing)
    upstream redis_backend {
        server redis-1:6379 max_fails=3 fail_timeout=30s weight=1;
        server redis-2:6379 max_fails=3 fail_timeout=30s weight=1;
        # Easy to add more Redis nodes here in the future:
        # server redis-3:6379 max_fails=3 fail_timeout=30s weight=1;
    }

    # Redis proxy server - API nodes connect to nginx:6379
    server {
        listen 6379;
        proxy_pass redis_backend;
        proxy_timeout 300s;
        proxy_connect_timeout 5s;
        proxy_socket_keepalive on;
        proxy_responses 1;  # Redis protocol expects 1 response per request
    }
}

# HTTP configuration for API load balancing
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream Configuration - Node.js API Servers
    upstream api_backend {
        # Sticky sessions for stateful operations
        ip_hash;
        
        # Node.js instances with health checks
        server api-node-1:3000 max_fails=3 fail_timeout=30s weight=1;
        server api-node-2:3000 max_fails=3 fail_timeout=30s weight=1;
    }

    # Health Check Upstream (Round Robin)
    upstream api_health {
        server api-node-1:3000 max_fails=1 fail_timeout=10s;
        server api-node-2:3000 max_fails=1 fail_timeout=10s;
    }

    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Main API Server Configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security
        client_max_body_size 10M;
        client_body_timeout 60s;
        client_header_timeout 60s;
        send_timeout 60s;
        
        # Connection limits
        limit_conn addr 20;

        # Root health check (round-robin for load balancing verification)
        location = /health {
            access_log off;
            proxy_pass http://api_health/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Redis health check endpoint
        location = /redis-health {
            access_log off;
            return 200 "Redis proxy active - load balancing across multiple Redis nodes\n";
            add_header Content-Type text/plain;
        }

        # API Routes with sticky sessions
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy to Node.js backend
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
            proxy_busy_buffers_size 16k;
            
            # Cache control
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
        }

        # Authentication endpoints with stricter rate limiting
        location ~ ^/api/v[0-9]+/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # File upload endpoints with very strict rate limiting
        location ~ ^/api/v[0-9]+/.*/upload {
            limit_req zone=upload burst=5 nodelay;
            
            # Increase body size for uploads
            client_max_body_size 50M;
            client_body_timeout 300s;
            
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for large uploads
            proxy_request_buffering off;
        }

        # Static files and documentation
        location /docs/ {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static documentation
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Metrics endpoint (internal only)
        location /metrics {
            allow 172.20.0.0/16;  # Internal network only
            deny all;
            
            access_log off;
            proxy_pass http://api_backend/api/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Admin interfaces (development only)
        location /admin/db {
            # Only allow in development
            allow 172.20.0.0/16;
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://adminer:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin/redis {
            # Only allow in development
            allow 172.20.0.0/16;
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://redis-commander:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Block common attack vectors
        location ~ /\.ht {
            deny all;
        }
        
        location ~ /\. {
            deny all;
        }

        # Default catch-all
        location / {
            return 404;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}